---
name: WorkProfile CI/CD

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  validation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Validate required files
        run: |
          test -f Dockerfile && echo "✓ Dockerfile exists"
          test -f requirements.txt && echo "✓ requirements.txt exists"
          test -f app.py && echo "✓ app.py exists"

      - name: Validate Python packages
        run: |
          python3 -c "import flask; print('✓ Flask import successful')"
          python3 -c "import mysql.connector; print('✓ MySQL connector import successful')"

  build-test-publish:
    needs: validation
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/workprofile-app
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build Docker image
        run: |
          docker build \
            -t $IMAGE_NAME:latest \
            -t $IMAGE_NAME:$IMAGE_TAG \
            .

      - name: Run container
        run: |
          docker run -d \
            -p 8080:5000 \
            --name workprofile_test \
            $IMAGE_NAME:latest

      - name: Wait for container to start
        run: sleep 10

      - name: Test root endpoint
        run: curl -f http://localhost:8080/

      - name: Test health endpoint
        run: curl -f http://localhost:8080/health

      - name: Stop and remove container
        run: |
          docker stop workprofile_test
          docker rm workprofile_test

      - name: Push Docker images
        if: ${{ success() == true }}
        run: |
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$IMAGE_TAG

  stage3-docker-compose:
    needs: build-test-publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Start 3-tier stack
        run: |
          cd docker-compose
          docker-compose up -d
          sleep 60

      - name: Test root endpoint
        run: curl -f http://localhost:8080/

      - name: Test health endpoint
        run: curl -f http://localhost:8080/health

      - name: Test database connectivity
        run: |
          curl -s http://localhost:8080/health | grep "Database: Healthy"

      - name: Shutdown 3-tier stack
        run: |
          cd docker-compose
          docker-compose down -v
